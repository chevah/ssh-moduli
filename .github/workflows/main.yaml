#
# Generated the prime numbers and generated used by SSH DH Group KEX.
#
# Generating is fast. Max 15 minutes.
# Validating is slow. 30 hours.
#
# Since the GitHub VM have 2 CPU each job will run 2 validating tasks.
# A job can run for 6 hours... so 12 hours of validation time per job.
# With 3 jobs for a certain size we should do it.
#
# It generates primes for 1024, 1536, 2048, 3072, 4096, 6144, 7680, 8192
#
name: CD

# Only run on pull requests and only for Python files.
on:
  # Pull requests are enabled for development.
  pull_request:
    branches: [ main ]

  # https://crontab.guru
  schedule:
    # At 01:00 on every 2 weeks on Saturday
    - cron: '0 1 1-7,15-21 * 6'

jobs:

  prevent_duplicates:
    runs-on: ubuntu-latest
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: chevah/python-info-action@v1


  generate:
    name: 'ssh-keygen -M generate ${{ matrix.size }}'
    needs: prevent_duplicates
    strategy:
      matrix:
        size: [ 1024, 1536,  2048, 3072, 4096, 6144 ]
        split: [2]
        include:
          - size: 7680
            split: 6
          - size: 8192
            split: 6


    runs-on: ubuntu-latest
    steps:

    - name: Candidate
      run: |
        ssh-keygen -M generate -O bits=${{ matrix.size }} full
        split -d -a 1 -n l/${{ matrix.split }} full g.

    - uses: actions/upload-artifact@v2
      with:
        name: candidate-${{ matrix.size }}
        path: g.*
        retention-days: 1


  screen:
    needs: generate
    name: 'ssh-keygen -M screen ${{ matrix.size }}'
    strategy:
      matrix:
        size: [ 1024, 1536, 2048, 3072, 4096, 6144 ]
        split: [2]
        start: [0]

        # For big primes it can take 30 hours on a single CPU.
        include:
          - size: 7680
            split: 6
            start: 0
          - size: 7680
            split: 6
            start: 2
          - size: 7680
            split: 6
            start: 4

          - size: 8192
            split: 6
            start: 0
          - size: 8192
            split: 6
            start: 2
          - size: 8192
            split: 6
            start: 4


    runs-on: ubuntu-latest
    steps:

    - uses: actions/download-artifact@v2
      with:
        name: candidate-${{ matrix.size }}

    - name: Validate
      run: |
        # Prepare all input as shell variables.
        size=${{ matrix.size }}
        first_index=${{ matrix.start }}
        second_index=$(( $first_index + 1 ))
        # Some debugging.
        ls -al *
        declare -p

        # The action.
        ssh-keygen -M screen -f g.$first_index  v-$size-$first_index &
        PS1=$!
        ssh-keygen -M screen -f g.$second_index  v-$size-$second_index &
        PS2=$!

        wait $PS1 $PS2

    - uses: actions/upload-artifact@v2
      with:
        name: validated
        path: v-*
        retention-days: 1


  combine:
    needs: screen
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: validated

    - name: Debug
      run: ls -al *

    - name: OpenSSH /etc/ssh/moduli
      run: cat v-* | sort -u > etc_ssh_moduli

    - name: Chevah Python Dict
      run: python chevah_format.py etc_ssh_moduli chevah_moduli.py

    # Clean all previous artifact to reduce the noise on the artifacts page.
    - uses: chevah/delete-artifact@1-glob-support
      with:
        name: '**'
        useGlob: true

    - uses: actions/upload-artifact@v2
      with:
        name: etc_ssh_moduli
        path: |
          etc_ssh_moduli

    - uses: actions/upload-artifact@v2
      with:
        name: chevah_moduli
        path: |
          chevah_moduli.py

    - name: Artifacts link
      run: echo ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}
